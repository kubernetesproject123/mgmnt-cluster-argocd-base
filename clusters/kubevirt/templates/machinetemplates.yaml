#
# Create control plane machine templates for all supported k8s versions
{{- range $version := $.Values.supported.k8s_versions }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtMachineTemplate
metadata:
  name: {{$.Values.tenant}}-control-plane-{{ regexReplaceAll "\\W+" $version "-" }}
  annotations:
    helm.sh/resource-policy: keep
spec:
  template:
    spec:
      virtualMachineTemplate:
        metadata:
          namespace: tenant-{{$.Values.tenant}}
        spec:
          runStrategy: Always
          template:
            spec:
              {% comment %} affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: 'kaas/group'
                            operator: In
                            values:
                              - 'compute' {% endcomment %}
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: "topology.kubernetes.io/zone"
                  whenUnsatisfiable: ScheduleAnyway
                  labelSelector:
                    matchLabels:
                      cluster.x-k8s.io/cluster-name: {{$.Values.tenant}}
                - maxSkew: 1
                  topologyKey: "kubernetes.io/hostname"
                  whenUnsatisfiable: ScheduleAnyway
                  labelSelector:
                    matchLabels:
                      cluster.x-k8s.io/cluster-name: {{$.Values.tenant}}
              domain:
                cpu:
                  cores: {{int $.Values.cluster.controlplane.cores}}
                devices:
                  disks:
                    - disk:
                        bus: virtio
                      name: containervolume
                memory:
                  guest: {{$.Values.cluster.controlplane.memory}}
              evictionStrategy: External
              volumes:
                - containerDisk:
                    image: localhost:30303/kubevirt/{{$.Values.cluster.image}}-{{ $version }}-container-disk:latest
                    # image: quay.io/capk/ubuntu-2004-container-disk:{{ $version }}
                  name: containervolume
{{- end }}

# Create worker node machine templates for all supported k8s versions and availability zones
{{- range $version := $.Values.supported.k8s_versions }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: KubevirtMachineTemplate
metadata:
  name: {{$.Values.tenant}}-workers-{{ regexReplaceAll "\\W+" $version "-" }}
  annotations:
    helm.sh/resource-policy: keep
spec:
  template:
    spec:
      virtualMachineTemplate:
        metadata:
          namespace: tenant-{{$.Values.tenant}}
          labels:
            cluster.x-k8s.io/cluster-name: "{{$.Values.tenant}}"
            cluster.x-k8s.io/role: worker
        spec:
          runStrategy: Always
          template:
            spec:
              {% comment %} affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: 'kaas/group'
                            operator: In
                            values:
                              - 'compute' {% endcomment %}
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: "topology.kubernetes.io/zone"
                  whenUnsatisfiable: ScheduleAnyway
                  labelSelector:
                    matchLabels:
                      cluster.x-k8s.io/cluster-name: {{$.Values.tenant}}
                - maxSkew: 1
                  topologyKey: "kubernetes.io/hostname"
                  whenUnsatisfiable: ScheduleAnyway
                  labelSelector:
                    matchLabels:
                      cluster.x-k8s.io/cluster-name: {{$.Values.tenant}}
              domain:
                cpu:
                  cores: {{int $.Values.cluster.workers.cores}}
                devices:
                  disks:
                    - disk:
                        bus: virtio
                      name: containervolume
                memory:
                  guest: {{$.Values.cluster.workers.memory}}
              evictionStrategy: External
              volumes:
                - containerDisk:
                    image: localhost:30303/kubevirt/{{$.Values.cluster.image}}-{{ $version }}-container-disk:latest
                    # image: quay.io/capk/ubuntu-2004-container-disk:{{ $version }}
                  name: containervolume
{{- end }}
