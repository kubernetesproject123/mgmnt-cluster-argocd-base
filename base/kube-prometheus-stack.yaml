# https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
# https://github.com/prometheus-community/helm-charts/issues/1500#issuecomment-1132907207
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  generators:
    - clusters:
        selector:
          matchLabels:
            clusterType: "host"
  template:
    metadata:
      name: '{{name}}--kube-prometheus-stack'
    spec:
      project: default
      source:
        chart: kube-prometheus-stack
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: "51.2.0"
        helm:
          releaseName: kube-prometheus-stack
          values: |
            defaultRules:
              rules:
                # Disable KubeSchedulerDown, KubeProxyDown, KubeControllerManagerDown
                # because running in k3s
                kubeControllerManager: false
                kubeProxy: false
                kubeSchedulerAlerting: false
            kubeProxy:
                enabled: false
            kubeControllerManager:
                enabled: false
            prometheus:
              prometheusSpec:
                enableRemoteWriteReceiver: true
                retention: "2d"
                storageSpec:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: longhorn
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 40Gi
                # The following four properties tell Prometheus to not add the helm label selector
                # so in our case it doesn't search for ServiceMonitors labeled release:kube-prometheus-stack
                # See https://github.com/prometheus-operator/kube-prometheus/issues/1392
                ruleSelectorNilUsesHelmValues: false
                serviceMonitorSelectorNilUsesHelmValues: false
                podMonitorSelectorNilUsesHelmValues: false
                probeSelectorNilUsesHelmValues: false
            alertmanager:
              enabled: true
              config:
                global:
                    resolve_timeout: 5m
                route:
                  group_by: ['namespace', 'alertname', 'pod']
                  group_wait: 30s
                  group_interval: 5m
                  repeat_interval: 24h
                  receiver: 'slack-notifications'
                  routes:
                    - match:
                        severity: critical
                      group_wait: 10s
                      repeat_interval: 24h
                      receiver: 'slack-notifications'
                      continue: true
                    - receiver: 'robusta'
                      group_by: [ '...' ]
                      group_wait: 1s
                      group_interval: 1s
                      matchers:
                        - severity =~ ".*"
                      repeat_interval: 24h
                      continue: true
                    - match:
                        serverity: info
                      receiver: 'null'
                      continue: true
                    - match:
                        serverity: none
                      receiver: 'null'
                      continue: true
                    - match:
                        alertname: 'InfoInhibitor'
                      receiver: 'null'
                      continue: true
                receivers:
                  - name: 'null'
                  - name: 'robusta'
                    webhook_configs:
                      - url: 'http://host-cluster--robusta-runner.argocd.svc.cluster.local/api/alerts'
                        send_resolved: true
                  - name: 'slack-notifications'
                    slack_configs:
                    - api_url:
                      channel: alarms-clouds-of-europe
                      send_resolved: true
                      icon_url: https://avatars3.githubusercontent.com/u/3380462
                      title: |-
                        [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
                        {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
                          {{" "}}(
                          {{- with .CommonLabels.Remove .GroupLabels.Names }}
                            {{- range $index, $label := .SortedPairs -}}
                              {{ if $index }}, {{ end }}
                              {{- $label.Name }}="{{ $label.Value -}}"
                            {{- end }}
                          {{- end -}}
                          )
                        {{- end }}
                      text: >-
                        {{ range .Alerts -}}
                        *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                        *Description:* {{ .Annotations.description }}

                        *Details:*
                          {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                          {{ end }}
                        {{ end }}
            grafana:
              dashboardProviders:
                dashboardproviders.yaml:
                  apiVersion: 1
                  providers:
                    - name: 'default'
                      orgId: 1
                      folder: ''
                      type: file
                      disableDeletion: false
                      editable: true
                      options:
                        path: /var/lib/grafana/dashboards/default
              dashboards:
                default:
                  # https://grafana.com/grafana/dashboards/13639-logs-app/
                  lokiLogs:
                    gnetId: 13639
                    revision: 2
                    datasource: Loki
                  # https://grafana.com/grafana/dashboards/13845-kubernetes-power-usage-using-scaphandre
                  scaphandre:
                    gnetId: 13845
                    revision: 2
                    datasource: Prometheus
                  longhorn:
                    gnetId: 17626
                    revision: 1
                    datasource: Prometheus
                  cert-manager:
                    gnetId: 11001
                    revision: 1
                    datasource: Prometheus
                  kubernetes-views-k3s-cluster:
                    gnetId: 16450
                    revision: 3
                    datasource: Prometheus
      ignoreDifferences:
        - group: "*"  # monitoring.coreos.com/v1
          kind: "*"
          # jqPathExpressions:
          #   - .spec.endpoints[]?.relabelings
          jsonPointers:
            - /spec/endpoints
      destination:
        server: '{{server}}'
        namespace: monitoring
      syncPolicy:
        automated:
          prune: true
          allowEmpty: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
          - ServerSideApply=true
