---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: zot-registry
  namespace: argocd
spec:
  generators:
    - matrix:
        generators:
          - clusters:
              selector:
                matchLabels:
                  provider: "novoserve"
              values:
                storageClass: local-path
                storageSize: 50Gi
          - clusters:
              selector:
                matchLabels:
                  clusterType: "mgmnt"
  template:
    metadata:
      name: '{{name}}--zot-registry'
    spec:
      project: default
      source:
        chart: zot
        repoURL: https://zotregistry.dev/helm-charts/
        targetRevision: 0.1.50
        helm:
          releaseName: zot
          valuesObject:
            persistence: true
            pvc:
              create: true
              storage: '{{values.storageSize}}'
              storageClassName: '{{values.storageClass}}'
            service:
              type: ClusterIP
              port: 5000
              # nodePort: 30202
            ingress:
              enabled: true
              annotations:
                kubernetes.io/ingress.class: nginx
                # kubernetes.io/tls-acme: "true"
                # If using nginx, disable body limits and increase read and write timeouts
                nginx.ingress.kubernetes.io/proxy-body-size: "0"
                nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
                nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
                nginx.ingress.kubernetes.io/whitelist-source-range: "11.11.11.11/27,10.0.0.0/8,11.11.11.11/32"
              className: "nginx"
              pathtype: ImplementationSpecific
              hosts:
                - host: zot-registry.mgmnt.ams1.tantlinger.io
                  paths:
                    - path: /
              tls:
                - secretName: tantlinger-wildcard-cert
                  hosts:
                    - zot-registry.mgmnt.ams1.tantlinger.io
                    # httpGet:
                    #   scheme: HTTPS
      destination:
        server: '{{server}}'
        namespace: zot-registry
      syncPolicy:
        automated:
          prune: true
          allowEmpty: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
          - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: zot-cert
  namespace: argocd
spec:
  generators:
    - matrix:
        generators:
          - clusters:
              selector:
                matchLabels:
                  provider: "novoserve"
          - clusters:
              selector:
                matchLabels:
                  clusterType: "mgmnt"
  template:
    metadata:
      name: '{{name}}--zot-cert'
    spec:
      project: default
      source:
        repoURL: https://github.com/kubernetesproject123/mgmnt-cluster-argocd-base
        targetRevision: main
        path: add-ons/cert
      destination:
        server: '{{server}}'
        namespace: zot-registry
      syncPolicy:
        automated:
          prune: true
          allowEmpty: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - ApplyOutOfSyncOnly=true
