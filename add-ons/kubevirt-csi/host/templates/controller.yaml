---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubevirt-csi-driver
  name: kubevirt-csi-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubevirt-csi-driver
  template:
    metadata:
      labels:
        app: kubevirt-csi-driver
    spec:
      containers:
        - args:
          - --endpoint=$(CSI_ENDPOINT)
          - --infra-cluster-namespace=$(INFRACLUSTER_NAMESPACE)
          - --infra-cluster-labels=$(INFRACLUSTER_LABELS)
          - --tenant-cluster-kubeconfig=/var/run/secrets/tenantcluster/value
          - --run-node-service=false
          - --run-controller-service=true
          - --v=5
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: INFRACLUSTER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INFRACLUSTER_LABELS
              value: "csi-driver/cluster={{.Values.tenant}}"
            - name: INFRA_STORAGE_CLASS_ENFORCEMENT
              valueFrom:
                configMapKeyRef:
                  key: infraStorageClassEnforcement
                  name: driver-config
                  optional: true
          image: ghcr.io/kvaps/test:kubevirt-csi-driver
          imagePullPolicy: Always
          name: csi-driver
          ports:
            - containerPort: 10301
              name: healthz
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
            - mountPath: /var/run/secrets/tenantcluster
              name: tenantcluster
        - args:
            - --csi-address=$(ADDRESS)
            - --default-fstype=ext4
            - --kubeconfig=/var/run/secrets/tenantcluster/value
            - --v=5
            - --timeout=3m
            - --retry-interval-max=1m
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: quay.io/openshift/origin-csi-external-provisioner:latest
          name: csi-provisioner
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
            - mountPath: /var/run/secrets/tenantcluster
              name: tenantcluster
        - args:
            - --csi-address=$(ADDRESS)
            - --kubeconfig=/var/run/secrets/tenantcluster/value
            - --v=5
            - --timeout=3m
            - --retry-interval-max=1m
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: quay.io/openshift/origin-csi-external-attacher:latest
          name: csi-attacher
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
            - mountPath: /var/run/secrets/tenantcluster
              name: tenantcluster
        - args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=10301
          image: quay.io/openshift/origin-csi-livenessprobe:latest
          name: csi-liveness-probe
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/run/secrets/tenantcluster
              name: tenantcluster
          # - args:
          #     - --v=5
          #     - --csi-address=/csi/csi.sock
          #     - --kubeconfig=/var/run/secrets/tenantcluster/value
          #   image: k8s.gcr.io/sig-storage/csi-snapshotter:v4.2.1
          #   imagePullPolicy: IfNotPresent
          #   name: csi-snapshotter
          #   resources:
          #     requests:
          #       cpu: 10m
          #       memory: 20Mi
          #   terminationMessagePath: /dev/termination-log
          #   terminationMessagePolicy: File
          #   volumeMounts:
          #     - mountPath: /csi
          #       name: socket-dir
          #     - mountPath: /var/run/secrets/tenantcluster
          #       name: tenantcluster
      {% comment %} nodeSelector:
        kaas/group: compute {% endcomment %}
      priorityClassName: system-cluster-critical
      serviceAccount: kubevirt-csi
      volumes:
        - emptyDir: {}
          name: socket-dir
        - name: tenantcluster
          secret:
            secretName: "{{.Values.tenant}}-kubeconfig"
