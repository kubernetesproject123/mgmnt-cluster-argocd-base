apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "scaphandre.name" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "scaphandre.name" . }}
  template:
    metadata:
      name: {{ template "scaphandre.name" . }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      {% comment %} affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: 'kaas/group'
                    operator: In
                    values:
                      - 'compute' {% endcomment %}
      containers:
      - name:  {{ template "scaphandre.name" . }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command: [ "scaphandre" ]
        args: 
          - prometheus
          - -p{{ .Values.port }}
          - --containers
        env:
        {{- if .Values.scaphandre.rustBacktrace }}
        - name: RUST_BACKTRACE
          value: '{{ .Values.scaphandre.rustBacktrace }}'
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.port }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - mountPath: /proc
          name: proc
          readOnly: false
        - mountPath: /sys/class/powercap
          name: powercap
          readOnly: false
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.userGroup }}
      serviceAccountName: {{ template "scaphandre.name" . }}
      # tolerations:
      # Tolerate all taints for observability
      # - operator: "Exists"
      volumes:
      - hostPath:
          path: /proc
          type: "Directory"
        name: proc
      - hostPath:
          path: /sys/class/powercap
          type: "Directory"
        name: powercap
