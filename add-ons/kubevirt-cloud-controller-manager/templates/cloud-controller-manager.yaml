apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: tenant-{{.Values.tenant}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kccm-{{.Values.tenant}}
  namespace: tenant-{{.Values.tenant}}
rules:
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachineinstances
  verbs:
  - get
  - watch
  - list
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kccm-{{.Values.tenant}}
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kccm-sa
  namespace: tenant-{{.Values.tenant}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kccm-{{.Values.tenant}}
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: tenant-{{.Values.tenant}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kccm-{{.Values.tenant}}
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: tenant-{{.Values.tenant}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kccm-{{.Values.tenant}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kccm-{{.Values.tenant}}
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: tenant-{{.Values.tenant}}
---
apiVersion: v1
data:
  cloud-config: |
    loadBalancer:
      creationPollInterval: 30
    namespace: tenant-{{.Values.tenant}}
kind: ConfigMap
metadata:
  name: cloud-config
  namespace: tenant-{{.Values.tenant}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubevirt-cloud-controller-manager
  name: kubevirt-cloud-controller-manager
  namespace: tenant-{{.Values.tenant}}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kubevirt-cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: kubevirt-cloud-controller-manager
    spec:
      containers:
      - args:
          - --cloud-provider=kubevirt
          - --cloud-config=/etc/cloud/cloud-config
          - --kubeconfig=/etc/kubernetes/kubeconfig/value
          - --cluster-name={{.Values.tenant}}
        command:
        - /bin/kubevirt-cloud-controller-manager
        image: quay.io/kubevirt/kubevirt-cloud-controller-manager:main
        imagePullPolicy: Always
        name: kubevirt-cloud-controller-manager
        resources:
          requests:
            cpu: 100m
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/kubernetes/kubeconfig
          name: kubeconfig
          readOnly: true
        - mountPath: /etc/cloud
          name: cloud-config
          readOnly: true
      {% comment %} nodeSelector:
        kaas/group: compute {% endcomment %}
      serviceAccountName: cloud-controller-manager
      volumes:
      - configMap:
          name: cloud-config
        name: cloud-config
      - name: kubeconfig
        secret:
          items:
            - key: value
              path: value
          secretName: {{.Values.tenant}}-kubeconfig
